@use "@zocom/styles" as *;

@mixin buttonStyles($style, $color) {
  transition: all 0.2s ease;
  padding: $padding-nano $padding-sml;
  color: $color;
  &:hover,
  &:focus-visible {
    background-color: $primaryTextDark;
    color: $primaryTextLight;
  }

  @if $style == "default" {
    background-color: $buttonBg;
  } @else if $style == "round" {
    @include button(true);
  } @else if $style == "alert" {
    background-color: $alertBg;
  } @else if $style == "dark" {
    background-color: $buttonDarkBg;
  } @else if $style == "border" {
    border: 1px solid $primaryTextLight;
  }
}

button {
  border-radius: $radiusRegular;
  &.button {
    &__regular {
      &--default {
        @include buttonStyles(default, white);
      }
      &--round {
        @include buttonStyles(round, black);
      }
      &--cart {
        @include buttonStyles(cart, white);
      }
      &--alert {
        @include buttonStyles(alert, $primaryTextLight);
        @include fontSizeBigger;
      }
    }
    &__cart {
      &--default {
        background-color: $primaryTextLight;
        @include logoSmall($logo-sml, 1);
        box-shadow: $shadow-medium;
      }
      &--alert {
        @include buttonStyles(alert, white);
        @include button(true);
        position: absolute;
        top: -$margin-sml;
        right: -$margin-sml;
      }
      &--dark {
        @include buttonStyles(dark, white);
        @include fontSizeBigger;
        padding-block: $padding;
        text-transform: uppercase;
      }
      &--border {
        @include buttonStyles(border, white);
        @include fontSizeBigger;
        padding-block: $padding;
      }
    }
    &__round {
      &--cart {
        @include buttonStyles(round, $primaryTextDark);
        background: $totalBg;
      }
    }
  }
}
